define("bIsObjectEqual",[],function(){function e(e){var t=JSON.stringify(e.Comparator),n=JSON.stringify(e.Comparand),s=!0;if(t.length==n.length)for(var o=0;o<t.length;o++)t[o]!==n[o]&&(s=!1);else s=!1;return s}return e}),define("Functions/add",["underscore"],function(e){return function(t){var n=this;return e.has(t,"Async")&&!0===t.Async?n.xAddTest({Test:n.xGenerateAsyncTest(t),Collection:n.get("AsyncTestCollection")}):n.xAddTest({Test:n.xGenerateTest(t),Collection:n.get("TestCollection")}),n}}),define("Functions/test",["promise","underscore","log"],function(e,t,n){return function(s){var o=this;return e(function(e){!1===t.isEmpty(o.get("AsyncTestCollection"))?o.bTestAllAsync(o.get("AsyncTestCollection")).then(function(n){if(!1===t.isEmpty(o.get("TestCollection"))){var s=o.bTestAll(o.get("TestCollection"));e(!0===n&&!0===s?!0:!1)}else e(n)}):!1===t.isEmpty(o.get("TestCollection"))?e(o.bTestAll(o.get("TestCollection"))):(n("Error: There are no tests to test."),e(!1))})}}),define("TestSuite",["jquery","underscore","backbone","rsvp","bIsObjectEqual","log","Functions/add","Functions/test","xGenerateTest","xAddTest","bTestAll","xGenerateAsyncTest","bTestAllAsync"],function(e,t,n,s,o,l,r,c,i,u,T,d,a){return n.Model.extend({defaults:function(){return{MethodUnderTest:null,TestCollection:[],AsyncTestCollection:[],Debug:!0}},xAddTest:u,xGenerateTest:i,bTestAll:T,xGenerateAsyncTest:d,bTestAllAsync:a,add:r,test:c})});