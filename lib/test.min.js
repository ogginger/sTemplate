define("Setup",["underscore"],function(t){return function(e){return t.isFunction(e)?e():e}}),define("bIsObjectEqual",[],function(){function t(t,e){var n=JSON.stringify(t),u=JSON.stringify(e),r=!0;if(n.length==u.length)for(var o=0;o<n.length;o++)n[o]!==u[o]&&(r=!1);else r=!1;return r}return t}),define("Assertion",["underscore","bIsObjectEqual"],function(t,e){return function(n){return t.has(n,"ComparisonFunction")?n.ComparisonFunction(n):t.has(n,"Comparator")&&t.has(n.Comparator,"Object")&&!0===n.Comparator.Object?e(n.Result,n.ExpectedOutput):n.Result===n.ExpectedOutput}}),define("Debug",["log","underscore"],function(t,e){return function(n){!0===n.Debug&&(e.has(n,"Comparator")&&e.has(n.Comparator,"Object")&&!0===n.Comparator.Object?(t("Result: "+JSON.stringify(n.Result)),t("Expected: "+JSON.stringify(n.ExpectedOutput))):(t("Result: "+n.Result),t("Expected: "+n.ExpectedOutput)))}}),define("Test",["Setup","Assertion","Debug"],function(t,e,n){return function(u){return{Name:u.Name,Run:function(){return u.Input=t(u.Input),u.Result=u.Function(u.Input),n(u),e(u)}}}});